server:
  port: 8080

spring:
  application:
    name: stream-video
  datasource:
    url: jdbc:postgresql://localhost:5432/streaming
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  servlet:
    multipart:
      max-file-size: 2GB
      max-request-size: 2GB
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

minio:
  endpoint: http://localhost:9000
  access-key: minioadmin
  secret-key: minioadmin
  bucket:
    video: videos
    hls: hls

jwt:
  secret: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
  expiration: 86400000 # 1 day

app:
  upload:
    temp-dir: /tmp/video-upload
  video:
    allowed-formats: mp4,avi,mov,wmv,flv,mkv
    max-file-size: 1073741824 # 1GB
  transcoding:
    profiles:
      - name: 1080p
        width: 1920
        height: 1080
        bitrate: 5000k
      - name: 720p
        width: 1280
        height: 720
        bitrate: 2500k
      - name: 480p
        width: 854
        height: 480
        bitrate: 1000k
      - name: 360p
        width: 640
        height: 360
        bitrate: 500k
  rtmp:
    url: rtmp://localhost/live
  webrtc:
    url: wss://localhost:8443/webrtc

kafka:
  topic:
    video-uploaded: video-uploaded
    video-processed: video-processed
    livestream-status: livestream-status

debezium:
  offset:
    storage:
      file:
        filename: /tmp/streaming/offsets.dat 