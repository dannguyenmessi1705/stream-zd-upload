server:
  port: 8081
  servlet:
    context-path: /api

spring:
  application:
    name: upload-service
  servlet:
    multipart:
      enabled: true
      max-file-size: 10GB
      max-request-size: 10GB
  datasource:
    url: jdbc:h2:mem:uploaddb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
  h2:
    console:
      enabled: true
      path: /h2-console
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false

# Cấu hình Actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,circuitbreakers,retries
  endpoint:
    health:
      show-details: always

# Cấu hình Resilience4j
resilience4j:
  circuitbreaker:
    instances:
      objectStorageService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        permittedNumberOfCallsInHalfOpenState: 3
        minimumNumberOfCalls: 5
        waitDurationInOpenState: 30s
        failureRateThreshold: 50
        recordExceptions:
          - java.io.IOException
          - java.lang.Exception
      metadataService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        permittedNumberOfCallsInHalfOpenState: 3
        minimumNumberOfCalls: 5
        waitDurationInOpenState: 30s
        failureRateThreshold: 50
        recordExceptions:
          - org.springframework.web.client.ResourceAccessException
          - java.lang.Exception
  retry:
    instances:
      objectStorageService:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        retryExceptions:
          - java.io.IOException
          - java.lang.Exception
      kafkaProducer:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        retryExceptions:
          - org.springframework.kafka.KafkaException
          - java.lang.Exception
  timelimiter:
    instances:
      objectStorageService:
        timeoutDuration: 10s
        cancelRunningFuture: true
      metadataService:
        timeoutDuration: 3s
        cancelRunningFuture: true
  bulkhead:
    instances:
      objectStorageService:
        maxConcurrentCalls: 20
        maxWaitDuration: 5s
      kafkaProducer:
        maxConcurrentCalls: 10
        maxWaitDuration: 5s

app:
  upload:
    temp-dir: ${java.io.tmpdir}/tus-uploads
    expiration: 86400000 # 24 hours in milliseconds
    supported-mime-types: video/mp4, video/x-msvideo, video/quicktime, video/x-matroska
    max-file-size: 10737418240 # 10GB in bytes
  minio:
    endpoint: http://localhost:9000
    access-key: minioadmin
    secret-key: minioadmin
    bucket-name: video-uploads
    region: us-east-1
    secure: false
  kafka:
    topic:
      video-uploaded: video-uploaded
  services:
    metadata-service:
      base-url: http://localhost:8082/api
      timeout: 5000
      retry-attempts: 3
    transcoding-service:
      base-url: http://localhost:8083/api 